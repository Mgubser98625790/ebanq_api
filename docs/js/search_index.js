var search_data = {"index":{"searchIndex":["ebanqapi","apipaths","auth","badgateway","badrequest","client","configuration","forbidden","gatewaytimeout","internalservererror","invalidsignature","notacceptable","notfound","profile","ratelimitexceeded","serviceunavailable","toomanyrequests","auth()","auth_path()","config()","headers()","login()","login_by()","login_with_token()","logout()","logout_device()","make_request()","new()","new()","new()","parse_failed()","pass_reset_token()","profile()","refresh_token()","request_new_password()","reset_password()","show()","success?()","update()","update_push_token()","update_user_pin()","readme"],"longSearchIndex":["ebanqapi","ebanqapi::apipaths","ebanqapi::auth","ebanqapi::badgateway","ebanqapi::badrequest","ebanqapi::client","ebanqapi::configuration","ebanqapi::forbidden","ebanqapi::gatewaytimeout","ebanqapi::internalservererror","ebanqapi::invalidsignature","ebanqapi::notacceptable","ebanqapi::notfound","ebanqapi::profile","ebanqapi::ratelimitexceeded","ebanqapi::serviceunavailable","ebanqapi::toomanyrequests","ebanqapi::client#auth()","ebanqapi::apipaths#auth_path()","ebanqapi::configuration#config()","ebanqapi::client#headers()","ebanqapi::auth#login()","ebanqapi::auth#login_by()","ebanqapi::auth#login_with_token()","ebanqapi::auth#logout()","ebanqapi::auth#logout_device()","ebanqapi::client#make_request()","ebanqapi::auth::new()","ebanqapi::client::new()","ebanqapi::profile::new()","ebanqapi::client#parse_failed()","ebanqapi::auth#pass_reset_token()","ebanqapi::client#profile()","ebanqapi::auth#refresh_token()","ebanqapi::auth#request_new_password()","ebanqapi::auth#reset_password()","ebanqapi::profile#show()","ebanqapi::client#success?()","ebanqapi::profile#update()","ebanqapi::auth#update_push_token()","ebanqapi::auth#update_user_pin()",""],"info":[["EbanqApi","","EbanqApi.html","","<p>frozen_string_literal: true\n<p>frozen_string_literal: true\n<p>frozen_string_literal: true\n"],["EbanqApi::ApiPaths","","EbanqApi/ApiPaths.html","","<p>Forms endpoints\n"],["EbanqApi::Auth","","EbanqApi/Auth.html","","<p>This class represents an auth functional of Ebanq REST Api.\n"],["EbanqApi::BadGateway","","EbanqApi/BadGateway.html","","<p>BadGateway exception class.\n"],["EbanqApi::BadRequest","","EbanqApi/BadRequest.html","","<p>BadRequest exception class.\n"],["EbanqApi::Client","","EbanqApi/Client.html","","<p>This class represents client functionality.\n"],["EbanqApi::Configuration","","EbanqApi/Configuration.html","","<p>Configuration module\n<p><code>base_url</code> - yourebanqdomain.com\n<p><code>token</code> - user token\n"],["EbanqApi::Forbidden","","EbanqApi/Forbidden.html","","<p>Forbidden exception class.\n"],["EbanqApi::GatewayTimeout","","EbanqApi/GatewayTimeout.html","","<p>GatewayTimeout exception class.\n"],["EbanqApi::InternalServerError","","EbanqApi/InternalServerError.html","","<p>InternalServerError exception class.\n"],["EbanqApi::InvalidSignature","","EbanqApi/InvalidSignature.html","","<p>InvalidSignature exception class.\n"],["EbanqApi::NotAcceptable","","EbanqApi/NotAcceptable.html","","<p>NotAcceptable exception class.\n"],["EbanqApi::NotFound","","EbanqApi/NotFound.html","","<p>NotFound exception class.\n"],["EbanqApi::Profile","","EbanqApi/Profile.html","","<p>This class represents an profile functional of Ebanq REST Api.\n"],["EbanqApi::RateLimitExceeded","","EbanqApi/RateLimitExceeded.html","","<p>RateLimitExceeded exception class.\n"],["EbanqApi::ServiceUnavailable","","EbanqApi/ServiceUnavailable.html","","<p>ServiceUnavailable exception class.\n"],["EbanqApi::TooManyRequests","","EbanqApi/TooManyRequests.html","","<p>TooManyRequests exception class.\n"],["auth","EbanqApi::Client","EbanqApi/Client.html#method-i-auth","()","<p>Declares an auth instance.\n"],["auth_path","EbanqApi::ApiPaths","EbanqApi/ApiPaths.html#method-i-auth_path","(action)","<p>Return /api/v1/auth path\n"],["config","EbanqApi::Configuration","EbanqApi/Configuration.html#method-i-config","()",""],["headers","EbanqApi::Client","EbanqApi/Client.html#method-i-headers","()",""],["login","EbanqApi::Auth","EbanqApi/Auth.html#method-i-login","(username, password, device_id, push_token = '')","<p>Login a user for a new session /api/v1/auth/login\n<p>Attributes\n<p><code>username</code> (required) - A valid username\n"],["login_by","EbanqApi::Auth","EbanqApi/Auth.html#method-i-login_by","(pin, device_id, push_token)","<p>Login by PIN and Device ID /api/v1/auth/login_pin\n<p>Attributes\n<p><code>pin</code> (required) - PIN code\n"],["login_with_token","EbanqApi::Auth","EbanqApi/Auth.html#method-i-login_with_token","(token, secret)","<p>Login a user for a new session using token and secret. Endpoint for third\nparty clients. /api/v1/auth/login_token …\n"],["logout","EbanqApi::Auth","EbanqApi/Auth.html#method-i-logout","()","<p>Logout a user session /api/v1/auth/logout\n"],["logout_device","EbanqApi::Auth","EbanqApi/Auth.html#method-i-logout_device","(device_id)","<p>Logout a user session by device id only /api/v1/auth/logout_device\n<p>Attributes\n<p><code>device_id</code> (required) - Device …\n"],["make_request","EbanqApi::Client","EbanqApi/Client.html#method-i-make_request","(method, url, values = {})","<p>Makes a request to Ebanq REST Api.\n<p>Attributes\n<p><code>method</code> - :get or :post value\n"],["new","EbanqApi::Auth","EbanqApi/Auth.html#method-c-new","(client)","<p>Declares an client instance.\n"],["new","EbanqApi::Client","EbanqApi/Client.html#method-c-new","()","<p>Requests service_token for current user.\n"],["new","EbanqApi::Profile","EbanqApi/Profile.html#method-c-new","(client)","<p>Declares an client instance.\n"],["parse_failed","EbanqApi::Client","EbanqApi/Client.html#method-i-parse_failed","(response)",""],["pass_reset_token","EbanqApi::Auth","EbanqApi/Auth.html#method-i-pass_reset_token","(uid, timestamp, hashed_pass)","<p>Process one time login link and return the pass_reset\n/api/v1/auth/user_pass_reset\n<p>Attributes\n<p><code>uid</code> (required) …\n"],["profile","EbanqApi::Client","EbanqApi/Client.html#method-i-profile","()","<p>Declares an profile instance.\n"],["refresh_token","EbanqApi::Auth","EbanqApi/Auth.html#method-i-refresh_token","(pin, device_id)","<p>Get token (Refresh token) /api/v1/auth/token\n<p>Attributes\n<p><code>pin</code> (required) - PIN code\n"],["request_new_password","EbanqApi::Auth","EbanqApi/Auth.html#method-i-request_new_password","(name)","<p>Request a new password, given a user name or e-mail address\n/api/v1/auth/request_new_password\n<p>Attributes …\n"],["reset_password","EbanqApi::Auth","EbanqApi/Auth.html#method-i-reset_password","(uid)","<p>Password reset /api/v1/auth/uid/password_reset\n<p>Attributes\n<p><code>uid</code> (required) - The id of the user\n"],["show","EbanqApi::Profile","EbanqApi/Profile.html#method-i-show","(uid)","<p>Get user profile data. /api/v1/auth/{uid}\n<p>Attributes\n<p><code>uid</code> (required) - The id of the user\n"],["success?","EbanqApi::Client","EbanqApi/Client.html#method-i-success-3F","(code)",""],["update","EbanqApi::Profile","EbanqApi/Profile.html#method-i-update","(uid, fields)","<p>Update user profile data /api/v1/auth/{uid}\n<p>Attributes\n<p><code>uid</code> (required) - The id of the user\n"],["update_push_token","EbanqApi::Auth","EbanqApi/Auth.html#method-i-update_push_token","(token, os_type)","<p>Set push token api/v1/auth/push_token\n<p>Attributes\n<p><code>token</code> (required) - Push token\n"],["update_user_pin","EbanqApi::Auth","EbanqApi/Auth.html#method-i-update_user_pin","(pin)","<p>Set user pin /api/v1/auth/pin\n<p>Attributes\n<p><code>pin</code> (required) - PIN code\n"],["README","","README_md.html","","<p>EbanqApi\n<p>A wrapper for the EBANQ Rest API. Specification is as described in the the\ndeveloper documentation …\n"]]}}